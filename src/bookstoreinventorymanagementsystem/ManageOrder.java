package bookstoreinventorymanagementsystem;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Liew Wen Yen
 */
public class ManageOrder extends javax.swing.JFrame {

    private final UserData userData;
    private final SalesData salesData;
    private double finalTotalPrice = 0;

    /**
     * Creates new form ManageOrder
     *
     * @param salesData
     * @param userData
     */
    public ManageOrder(SalesData salesData, UserData userData) {
        initComponents();
        setLocationRelativeTo(null);
        updateCustomerComboBox();
        this.salesData = salesData;
        this.userData = userData;
    }

    private void updateCustomerComboBox() {
        try {
            ArrayList<String> customerNames = CustomerDAO.getAllCustomersName();
            for (String customerName : customerNames) {
                customerSelectionComboBox.addItem(customerName);
            }
        } catch (SQLException ex) {
            UIUtils.displayErrorMessage("Failed to load customer names: " + ex.getMessage());
            Logger.getLogger(ManageCustomer.class.getName()).log(Level.SEVERE, "Failed to load customer names", ex);
        }
    }

    private boolean isProductAlreadyInCart(DefaultTableModel model, String bookID) {
        for (int i = 0; i < model.getRowCount(); i++) {
            String existingProductId = model.getValueAt(i, 0).toString();
            if (existingProductId.equals(bookID)) {
                return true;
            }
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basePanel = new javax.swing.JPanel();
        DateLabel = new javax.swing.JLabel();
        HomePage = new javax.swing.JLabel();
        lblGreenStrip = new javax.swing.JPanel();
        CartPanel1 = new javax.swing.JPanel();
        customerSelectionComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        CartLabel1 = new javax.swing.JLabel();
        finalTotalPriceLabel1 = new javax.swing.JLabel();
        QuantityLabel1 = new javax.swing.JLabel();
        QuantityLabel3 = new javax.swing.JLabel();
        orderQuantityField = new javax.swing.JTextField();
        addToCartButton = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        CartPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        TotalLabel = new javax.swing.JLabel();
        CartLabel = new javax.swing.JLabel();
        finalTotalPriceLabel = new javax.swing.JLabel();
        finalPriceLabel = new javax.swing.JLabel();
        placeOrderButton = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        TotalLabel1 = new javax.swing.JLabel();
        TotalLabel2 = new javax.swing.JLabel();
        selectedCustomerIDLabel = new javax.swing.JLabel();
        selectedCustomerNameLabel = new javax.swing.JLabel();
        lblBlueStrip = new javax.swing.JPanel();
        homeButton = new javax.swing.JPanel();
        homeIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        basePanel.setBackground(new java.awt.Color(253, 252, 248));
        basePanel.setPreferredSize(new java.awt.Dimension(900, 500));

        HomePage.setBackground(new java.awt.Color(0, 140, 214));
        HomePage.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        HomePage.setForeground(new java.awt.Color(0, 140, 214));
        HomePage.setText("Manage Order");

        lblGreenStrip.setBackground(new java.awt.Color(62, 164, 52));

        javax.swing.GroupLayout lblGreenStripLayout = new javax.swing.GroupLayout(lblGreenStrip);
        lblGreenStrip.setLayout(lblGreenStripLayout);
        lblGreenStripLayout.setHorizontalGroup(
            lblGreenStripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lblGreenStripLayout.setVerticalGroup(
            lblGreenStripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        CartPanel1.setBackground(new java.awt.Color(253, 252, 248));
        CartPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        CartPanel1.setForeground(new java.awt.Color(153, 153, 153));
        CartPanel1.setOpaque(false);
        CartPanel1.setPreferredSize(new java.awt.Dimension(380, 420));

        customerSelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select" }));
        customerSelectionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSelectionComboBoxActionPerformed(evt);
            }
        });

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setResizable(false);
            productTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            productTable.getColumnModel().getColumn(1).setResizable(false);
            productTable.getColumnModel().getColumn(2).setResizable(false);
            productTable.getColumnModel().getColumn(3).setResizable(false);
        }

        CartLabel1.setBackground(new java.awt.Color(102, 204, 255));
        CartLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CartLabel1.setForeground(new java.awt.Color(0, 140, 214));
        CartLabel1.setText("Checkout");

        QuantityLabel1.setText("Customer:");

        QuantityLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        QuantityLabel3.setForeground(new java.awt.Color(0, 100, 0));
        QuantityLabel3.setText("Quantity: ");

        orderQuantityField.setBackground(new java.awt.Color(253, 252, 248));
        orderQuantityField.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        orderQuantityField.setForeground(new java.awt.Color(0, 100, 0));
        orderQuantityField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        orderQuantityField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        orderQuantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderQuantityFieldActionPerformed(evt);
            }
        });

        addToCartButton.setBackground(new java.awt.Color(0, 140, 214));
        addToCartButton.setPreferredSize(new java.awt.Dimension(136, 33));
        addToCartButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToCartButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addToCartButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addToCartButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addToCartButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addToCartButtonMouseReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Add to Cart");

        javax.swing.GroupLayout addToCartButtonLayout = new javax.swing.GroupLayout(addToCartButton);
        addToCartButton.setLayout(addToCartButtonLayout);
        addToCartButtonLayout.setHorizontalGroup(
            addToCartButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addToCartButtonLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addToCartButtonLayout.setVerticalGroup(
            addToCartButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout CartPanel1Layout = new javax.swing.GroupLayout(CartPanel1);
        CartPanel1.setLayout(CartPanel1Layout);
        CartPanel1Layout.setHorizontalGroup(
            CartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CartPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(CartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CartPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(finalTotalPriceLabel1)
                        .addContainerGap(356, Short.MAX_VALUE))
                    .addGroup(CartPanel1Layout.createSequentialGroup()
                        .addGroup(CartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CartPanel1Layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(CartLabel1))
                            .addGroup(CartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(CartPanel1Layout.createSequentialGroup()
                                    .addComponent(QuantityLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(customerSelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                                .addComponent(addToCartButton, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)))
                        .addContainerGap(25, Short.MAX_VALUE))))
            .addGroup(CartPanel1Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(QuantityLabel3)
                .addGap(18, 18, 18)
                .addComponent(orderQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CartPanel1Layout.setVerticalGroup(
            CartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CartPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CartLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuantityLabel1)
                    .addComponent(customerSelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(CartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(QuantityLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(addToCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(finalTotalPriceLabel1))
        );

        CartPanel.setBackground(new java.awt.Color(253, 252, 248));
        CartPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        CartPanel.setPreferredSize(new java.awt.Dimension(380, 420));

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Quantity", "Sub Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cartTable);
        if (cartTable.getColumnModel().getColumnCount() > 0) {
            cartTable.getColumnModel().getColumn(0).setResizable(false);
            cartTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            cartTable.getColumnModel().getColumn(1).setResizable(false);
            cartTable.getColumnModel().getColumn(2).setResizable(false);
            cartTable.getColumnModel().getColumn(3).setResizable(false);
        }

        TotalLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        TotalLabel.setForeground(new java.awt.Color(0, 100, 0));
        TotalLabel.setText("Total Payment: RM");

        CartLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CartLabel.setForeground(new java.awt.Color(0, 140, 214));
        CartLabel.setText("Cart");

        finalPriceLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        finalPriceLabel.setForeground(new java.awt.Color(0, 100, 0));
        finalPriceLabel.setText("00.0");

        placeOrderButton.setBackground(new java.awt.Color(0, 140, 214));
        placeOrderButton.setPreferredSize(new java.awt.Dimension(136, 33));
        placeOrderButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                placeOrderButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                placeOrderButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                placeOrderButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeOrderButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                placeOrderButtonMouseReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Place Order");

        javax.swing.GroupLayout placeOrderButtonLayout = new javax.swing.GroupLayout(placeOrderButton);
        placeOrderButton.setLayout(placeOrderButtonLayout);
        placeOrderButtonLayout.setHorizontalGroup(
            placeOrderButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, placeOrderButtonLayout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(124, 124, 124))
        );
        placeOrderButtonLayout.setVerticalGroup(
            placeOrderButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        TotalLabel1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        TotalLabel1.setForeground(new java.awt.Color(0, 100, 0));
        TotalLabel1.setText("Customer ID      :");

        TotalLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        TotalLabel2.setForeground(new java.awt.Color(0, 100, 0));
        TotalLabel2.setText("Customer Name:");

        selectedCustomerIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        selectedCustomerIDLabel.setForeground(new java.awt.Color(0, 100, 0));
        selectedCustomerIDLabel.setText("customerID");

        selectedCustomerNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        selectedCustomerNameLabel.setForeground(new java.awt.Color(0, 100, 0));
        selectedCustomerNameLabel.setText("Customer Name");

        javax.swing.GroupLayout CartPanelLayout = new javax.swing.GroupLayout(CartPanel);
        CartPanel.setLayout(CartPanelLayout);
        CartPanelLayout.setHorizontalGroup(
            CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CartPanelLayout.createSequentialGroup()
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(CartPanelLayout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(placeOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CartPanelLayout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(CartPanelLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(CartLabel))
                    .addGroup(CartPanelLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(TotalLabel)
                        .addGap(5, 5, 5)
                        .addComponent(finalPriceLabel)))
                .addGap(26, 26, 26))
            .addGroup(CartPanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TotalLabel1)
                    .addComponent(TotalLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(selectedCustomerIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectedCustomerNameLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CartPanelLayout.setVerticalGroup(
            CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CartLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TotalLabel1)
                    .addComponent(selectedCustomerIDLabel))
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedCustomerNameLabel)
                    .addComponent(TotalLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TotalLabel)
                    .addComponent(finalPriceLabel))
                .addGap(12, 12, 12)
                .addComponent(placeOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        lblBlueStrip.setBackground(new java.awt.Color(0, 140, 214));
        lblBlueStrip.setForeground(new java.awt.Color(51, 102, 255));
        lblBlueStrip.setPreferredSize(new java.awt.Dimension(45, 28));

        homeButton.setBackground(new java.awt.Color(0, 140, 214));
        homeButton.setPreferredSize(new java.awt.Dimension(136, 33));
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homeButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                homeButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                homeButtonMouseReleased(evt);
            }
        });

        homeIcon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        homeIcon.setForeground(new java.awt.Color(255, 255, 255));
        homeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Home Icon.png"))); // NOI18N
        homeIcon.setPreferredSize(new java.awt.Dimension(33, 30));

        javax.swing.GroupLayout homeButtonLayout = new javax.swing.GroupLayout(homeButton);
        homeButton.setLayout(homeButtonLayout);
        homeButtonLayout.setHorizontalGroup(
            homeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );
        homeButtonLayout.setVerticalGroup(
            homeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout lblBlueStripLayout = new javax.swing.GroupLayout(lblBlueStrip);
        lblBlueStrip.setLayout(lblBlueStripLayout);
        lblBlueStripLayout.setHorizontalGroup(
            lblBlueStripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblBlueStripLayout.createSequentialGroup()
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        lblBlueStripLayout.setVerticalGroup(
            lblBlueStripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout basePanelLayout = new javax.swing.GroupLayout(basePanel);
        basePanel.setLayout(basePanelLayout);
        basePanelLayout.setHorizontalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanelLayout.createSequentialGroup()
                .addGroup(basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basePanelLayout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(HomePage))
                    .addGroup(basePanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(CartPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(DateLabel)
                        .addGap(29, 29, 29)
                        .addComponent(CartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblBlueStrip, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addComponent(lblGreenStrip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        basePanelLayout.setVerticalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanelLayout.createSequentialGroup()
                .addComponent(lblBlueStrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(HomePage)
                .addGap(7, 7, 7)
                .addComponent(lblGreenStrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CartPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(basePanelLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(DateLabel))
                    .addComponent(CartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        ArrayList<BookData> bookDataList;
        model.setRowCount(0);

        try {
            bookDataList = BookDAO.getBooksDetailsForOrderManagement();

            for (BookData bookData : bookDataList) {
                Object[] rowData = {
                    bookData.getBookID(),
                    bookData.getBookTitle(),
                    bookData.getStockQuantity(),
                    bookData.getNetPrice()
                };
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            UIUtils.displayErrorMessage("Failed to fetch book data: " + ex.getMessage());
            Logger.getLogger(ManageCustomer.class.getName()).log(Level.SEVERE, "Failed to fetch book data", ex);
        }
    }//GEN-LAST:event_formComponentShown

    private void addToCartButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToCartButtonMouseClicked
        String noOfUnits = orderQuantityField.getText();

        if (noOfUnits.trim().isEmpty()) {
            UIUtils.displayErrorMessage("No quantity entered.");
            return;
        }

        int selectedRow = productTable.getSelectedRow();
        if (selectedRow == -1) {
            UIUtils.displayErrorMessage("Please select a product from the table.");
            return;
        }

        String bookID = productTable.getValueAt(selectedRow, 0).toString();
        String bookTitle = productTable.getValueAt(selectedRow, 1).toString();
        String netPriceStr = productTable.getValueAt(selectedRow, 3).toString();

        try {
            int stockQuantity = Integer.parseInt(productTable.getValueAt(selectedRow, 2).toString());
            double netPrice = Double.parseDouble(netPriceStr);
            double totalPrice = Double.parseDouble(noOfUnits) * netPrice;

            DefaultTableModel model = (DefaultTableModel) cartTable.getModel();

            if (isProductAlreadyInCart(model, bookID)) {
                UIUtils.displayErrorMessage("Book already exists in cart.");
                return;
            }

            if (stockQuantity < Integer.parseInt(noOfUnits)) {
                UIUtils.displayErrorMessage("Product is out of stock. Only " + stockQuantity + " left.");
            }

            model.addRow(new Object[]{bookID, bookTitle, noOfUnits, totalPrice});
            finalTotalPrice += totalPrice;
            finalPriceLabel.setText(String.format("%.2f", finalTotalPrice));
            UIUtils.displaySuccessMessage("Added to cart successfully.");
        } catch (NumberFormatException ex) {
            UIUtils.displayErrorMessage("Invalid quantity or price: " + ex.getMessage());
            Logger.getLogger(ManageCustomer.class.getName()).log(Level.SEVERE, "Invalid quantity or price", ex);
        }
    }//GEN-LAST:event_addToCartButtonMouseClicked

    private void addToCartButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToCartButtonMouseEntered
        addToCartButton.setBackground(ColorManager.MEDIUM_BLUE);
    }//GEN-LAST:event_addToCartButtonMouseEntered

    private void addToCartButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToCartButtonMouseExited
        addToCartButton.setBackground(ColorManager.PRIMARY_BLUE);
    }//GEN-LAST:event_addToCartButtonMouseExited

    private void addToCartButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToCartButtonMousePressed
        addToCartButton.setBackground(ColorManager.DEEP_BLUE);
    }//GEN-LAST:event_addToCartButtonMousePressed

    private void addToCartButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToCartButtonMouseReleased
        addToCartButton.setBackground(ColorManager.MEDIUM_BLUE);
    }//GEN-LAST:event_addToCartButtonMouseReleased

    private void placeOrderButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOrderButtonMouseReleased
        placeOrderButton.setBackground(ColorManager.MEDIUM_BLUE);
    }//GEN-LAST:event_placeOrderButtonMouseReleased

    private void placeOrderButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOrderButtonMousePressed
        placeOrderButton.setBackground(ColorManager.DEEP_BLUE);
    }//GEN-LAST:event_placeOrderButtonMousePressed

    private void placeOrderButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOrderButtonMouseExited
        placeOrderButton.setBackground(ColorManager.PRIMARY_BLUE);
    }//GEN-LAST:event_placeOrderButtonMouseExited

    private void placeOrderButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOrderButtonMouseEntered
        placeOrderButton.setBackground(ColorManager.MEDIUM_BLUE);
    }//GEN-LAST:event_placeOrderButtonMouseEntered

    private void placeOrderButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOrderButtonMouseClicked
        // Check if customer is selected and cart is not empty
        if (!customerSelectionComboBox.getSelectedItem().equals("Please Select") && cartTable.getRowCount() > 0) {
            try {
                salesData.setSalesID(SalesDAO.setNextSalesID());
                salesData.setSalespersonID(userData.getUserID());
                salesData.setCustomerID(selectedCustomerIDLabel.getText());
                String formattedTotalPrice = String.format("%.2f", finalTotalPrice);
                salesData.setTotalPrice(Double.parseDouble(formattedTotalPrice));
                SalesDAO.saveSalesData(salesData, cartTable);
                UIUtils.displaySuccessMessage("Order placed. Sales ID: " + salesData.getSalesID());
                dispose();
                new SalespersonHomePage(userData).setVisible(true);
            } catch (SQLException ex) {
                UIUtils.displayErrorMessage("Failed to save sales data: " + ex.getMessage());
                Logger.getLogger(ManageCustomer.class.getName()).log(Level.SEVERE, "Failed to save sales data", ex);
            }
        } else {
            UIUtils.displayErrorMessage("Please select a customer and ensure the cart is not empty.");
        }
    }//GEN-LAST:event_placeOrderButtonMouseClicked

    private void customerSelectionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSelectionComboBoxActionPerformed
        // Get the selected customer name from the combo box
        String selectedCustomerName = (String) customerSelectionComboBox.getSelectedItem();

        try {
            CustomerData customer = CustomerDAO.getCustomerByName(selectedCustomerName);
            selectedCustomerIDLabel.setText(customer.getCustomerID());
            selectedCustomerNameLabel.setText(customer.getFullName());
        } catch (SQLException ex) {
            UIUtils.displayErrorMessage("Failed to load customer data: " + ex.getMessage());
            Logger.getLogger(ManageCustomer.class.getName()).log(Level.SEVERE, "Failed to load customer data", ex);
        }
    }//GEN-LAST:event_customerSelectionComboBoxActionPerformed

    private void orderQuantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderQuantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderQuantityFieldActionPerformed

    private void cartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTableMouseClicked
        int index = cartTable.getSelectedRow();
        int option = JOptionPane.showConfirmDialog(null, "Do you want to remove this product?", "Select", JOptionPane.YES_NO_OPTION);

        if (option == 0) {
            TableModel model = cartTable.getModel();
            String subTotal = model.getValueAt(index, 3).toString();
            finalTotalPrice = finalTotalPrice - Integer.parseInt(subTotal);
            finalPriceLabel.setText(String.valueOf(finalTotalPrice));
            ((DefaultTableModel) cartTable.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_cartTableMouseClicked

    private void homeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseClicked
        dispose();
        new SalespersonHomePage(userData).setVisible(true);
    }//GEN-LAST:event_homeButtonMouseClicked

    private void homeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseEntered
        homeButton.setBackground(ColorManager.MEDIUM_BLUE);
    }//GEN-LAST:event_homeButtonMouseEntered

    private void homeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseExited
        homeButton.setBackground(ColorManager.PRIMARY_BLUE);
    }//GEN-LAST:event_homeButtonMouseExited

    private void homeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMousePressed
        homeButton.setBackground(ColorManager.DEEP_BLUE);
    }//GEN-LAST:event_homeButtonMousePressed

    private void homeButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseReleased
        homeButton.setBackground(ColorManager.MEDIUM_BLUE);
    }//GEN-LAST:event_homeButtonMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageOrder(new SalesData(), new UserData()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CartLabel;
    private javax.swing.JLabel CartLabel1;
    private javax.swing.JPanel CartPanel;
    private javax.swing.JPanel CartPanel1;
    private javax.swing.JLabel DateLabel;
    private javax.swing.JLabel HomePage;
    private javax.swing.JLabel QuantityLabel1;
    private javax.swing.JLabel QuantityLabel3;
    private javax.swing.JLabel TotalLabel;
    private javax.swing.JLabel TotalLabel1;
    private javax.swing.JLabel TotalLabel2;
    private javax.swing.JPanel addToCartButton;
    private javax.swing.JPanel basePanel;
    private javax.swing.JTable cartTable;
    private javax.swing.JComboBox<String> customerSelectionComboBox;
    private javax.swing.JLabel finalPriceLabel;
    private javax.swing.JLabel finalTotalPriceLabel;
    private javax.swing.JLabel finalTotalPriceLabel1;
    private javax.swing.JPanel homeButton;
    private javax.swing.JLabel homeIcon;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel lblBlueStrip;
    private javax.swing.JPanel lblGreenStrip;
    private javax.swing.JTextField orderQuantityField;
    private javax.swing.JPanel placeOrderButton;
    private javax.swing.JTable productTable;
    private javax.swing.JLabel selectedCustomerIDLabel;
    private javax.swing.JLabel selectedCustomerNameLabel;
    // End of variables declaration//GEN-END:variables
}
